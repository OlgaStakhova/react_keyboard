{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handlerKeyUp","event","code","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,aAAe,SAACC,GAAD,MACE,UAAfA,EAAMC,KACF,EAAKC,SAAS,CAAEJ,WAAYE,EAAMC,OAClC,EAAKC,SAAS,CAAEJ,WAAYE,EAAMG,OAhB1C,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKP,gBAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,gBAV/C,oBAmBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGV,EAAU,mCACqBA,EADrB,KAEP,kCA3Bd,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c4405502.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handlerKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handlerKeyUp);\n  }\n\n  handlerKeyUp = (event: KeyboardEvent) => (\n    event.code === 'Space'\n      ? this.setState({ pressedKey: event.code })\n      : this.setState({ pressedKey: event.key })\n  );\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey\n            ? `The last pressed key is [${pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}